// Firstly setting up basic  react app folder for our admin dashboard project and also celan my project from unneccessary default code after it as i am using shadcn so install tailwind css and types of node also for shadcn installation for more assistance we can go to shadcn documentation and also we can use tailwind css documentation for more assistance i will add it from documentation of shadcn
// By the use of shacn i have copied the code of login signup and dashboard after it i have make layout of dashboard bcz we want some things static in diff pages and only middle inventory must be changing so for this i wil make a layout and the things that remain same will be kept in layout and the things that must be changed will be kept in diff comp and after i make the use of Outlet
// which help in changing the middle part of the layout and the layout will remain same and the middle part will be changed for it we have to change in our router.tsx file and add children field in the / route so that we will have acess to diff pages and we can change the middle part of the layout

// one new thing as wee see in out login and signup we will not have anything in common so we will make a layout with nothing in it just Outlet of react router dom and we will use this layout for login and signup in router.tsx
//After it i will leanr about the useNavigate hook of react-router-dom which is used to navigate to diff pages in react and i will use it in my login page to navigate to home page after successful login and also i will learn about the useMutation hook of react-query which is used t make server calls along with the axios instance and i will use it in my login page to make a server call to login the user and after successful login i will navigate to home page
//if we want to send data to the server in this case we will use useMutation hook of react-query and we will pass the data to the mutate function of the useMutation hook and it will make a server call to the server and if we want to get some data from server in this case useQuery hook of react-query will be used and we will pass the url to the useQuery hook and it will make a server call to the server and get the data from the server
//After it i will leanrn about adding the loader into my app for it i wil get the lucid-react icon for loader and use mutate.ispending function of useMutation hook of react-query to show the loader when the server call is in progress

//After it i have learned about storing token and manage the state using zustand for this firstly i have to make  a zustand store using create method and in this store  i have 2 fields token and setToken and i have used devtools and persist middleware of zustand to store the token in the local storage so that after reload my token will not lost but it will b stored in local storage and then use it where i want authentication and authorization  i have implement this funct in login page

//After this i will learn about the useQuery hook from react-query which helps us to fetch dtaa from server in efficient way in such a case we can set out the time for implementing cache so that we can get the data from cache if the data is not changed and we can get the data from server if the data is changed and we can also set the time for refetching the data from server so that we can get the updated data from server and we can also set the time for stale data so that we can get the data from cache if the data is not changed and we can get the data from server if the data is changed

// After this i will work on the react create book page and make a react-hook-form with zod validaion and then as we know now req contains mulitpart formdata so we cant use json Data so for this i make formdata and then send it through the apu to backend with the help of mutation and also i will leanrn how to modify cache so that we will then get fresh data from server for this i will use my Queryclient  which i will get from useQueryClient hook of react-query and then i will use invalidateQueries method of queryclient to invalidate the cache of the book list so that we will get fresh data from server

//After this i will learn about conditional rendering of searchbar by the use of useLocation hook which is used to get the location of the page and then i will use it to get the search query from the url and then i will use it to show the search bar only when the user is on the books page and not on the other pages and then i will use the search query to filter the books and then i will show the filtered books on the books page

//Also i wil learn about the pagination logic how to implement it both at backend and frontend and the implement in booksPage

//After this i wil learn about the interceptors in axios and how to use them to add the token in the headers of the request so that we can make the authenticated request to the server and then i will use it in my api file to add the token in the headers of the request so that we can make the authenticated request to the server
